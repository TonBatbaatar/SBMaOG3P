NumberIO,"```python
def sum_int_float(in0, in1):
    return in0 + in1
```

**Example Usage:**

```python
res0 = sum_int_float(10, 2.5)
print(res0)  # Output: 12.5
```"
SmallOrLarge,"```python
def size(in0):
    return ""small"" if in0 < 1000 else ""large""
```

**Example Usage:**

```python
res0 = size(500)  # 'small'
res1 = size(1500)  # ''
res2 = size(2500)  # 'large'
```"
ForLoopIndex,"```python
def rangelist(start, end, step):
    return [n for n in range(start, end, step)]
```

**Example Usage:**

```python
res0 = rangelist(1, 10, 2)
print(res0)
```

**Output:**

```
[1, 3, 5, 7, 9]
```"
CompareStringLengths,"```python
def check_length(in0, in1, in2):
    return len(in0) < len(in1) < len(in2)
```

**Example Usage:**

```python
n1 = ""a""
n2 = ""b""
n3 = ""c""

res0 = check_length(n1, n2, n3)  # True

n1 = ""c""
n2 = ""a""
n3 = ""b""

res1 = check_length(n1, n2, n3)  # False
```"
DoubleLetters,"```python
def dtrip(in0):
    return ''.join([ch * 2 if ch.isalpha() else ch * 3 if ch == '!' else ch for ch in in0])
```

**Example Usage:**

```python
res0 = dtrip(""Hello!!"")
print(res0)  # Output: Hhheeello!!
```"
CollatzNumbers,"```python
def collatz_length(in0):
    cnt = 0
    while in0 != 1:
        if in0 % 2 == 0:
            in0 //= 2
        else:
            in0 = 3 * in0 + 1
        cnt += 1
    return cnt
```

**Example Usage:**

```python
res0 = collatz_length(6)  # Output: 8
res1 = collatz_length(10)  # Output: 6
```"
ReplaceSpacewithNewline,"```python
def sp2nl(in0):
    return in0.replace(' ', '\n'), len(in0) - in0.count(' ')
```

**Example Usage:**

```python
str1 = ""This is a string with spaces.""
res0, res1 = sp2nl(str1)

print(f""String with newlines:\n{res0}"")
print(f""Count of non-whitespace characters: {res1}"")
```

**Output:**

```
String with newlines:
This
is
a
string
with
spaces.

Count of non-whitespace characters: 20
```"
EvenSquares,"```python
def even_perfect_squares(n):
    return [x**2 for x in range(1, int(n**0.5) + 1) if x % 2 == 0]
```

**Example Usage:**

```python
res = even_perfect_squares(20)
print(res)
```

**Output:**

```
[4, 16]
```"
WallisPi,"```python
def pi_approximation(n):
    res = 1
    for i in range(1, n+1):
        res *= (2*i-1)/(2*i)
    return round(res, 5)
```

**Example Usage:**
```python
>>> pi_approximation(5)
0.7854
>>> pi_approximation(10)
0.785398
```"
StringLengthsBackwards,"```python
def vec_len(in0):
    return [len(x) for x in in0[::-1]]

# Example Usage
vec = ['abc', 'cde', 'efg']
res = vec_len(vec)
print(res)  # [3, 4, 3]
```"
LastIndexofZero,"```python
def last_zero(in0):
    return in0.rindex(0)
```

**Example Usage:**

```python
vector = [1, 2, 3, 0, 0, 7, 0, 9]
index = last_zero(vector)

print(index)  # Output: 6
```"
VectorAverage,"```python
def avg(*in0):
    return round(sum(in0) / len(in0), 4)
```

**Example Usage:**

```python
res0 = avg(1.2, 2.3, 3.4, 4.5)
print(res0)  # Output: 3.25
```"
CountOdds,"```python
def count_odd(in0):
    res0 = 0
    for i in in0:
        res0 += i % 2
    return res0
```

**Example Usage:**

```python
vector = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
count = count_odd(vector)
print(count)  # Output: 5
```"
MirrorImage,"```python
def is_reverse(in0, in1):
    return sorted(in0) == sorted(in1[::-1])

# Example Usage
vector1 = [1, 2, 3, 4, 5]
vector2 = [5, 4, 3, 2, 1]

print(is_reverse(vector1, vector2))  # True
```"
SuperAnagrams,"```python
def isSuperAnagram(in0, in1):
    return sorted(in0) <= sorted(in1)
```

**Example Usage:**

```python
isSuperAnagram('abc', 'abca')  # True
isSuperAnagram('abca', 'abca')  # True
isSuperAnagram('abca', 'abcde')  # True
isSuperAnagram('abca', 'cde')  # False
```"
SumofSquares,"```python
def sqrange(n):
    return sum(x**2 for x in range(1, n + 1))

res = sqrange(5)  # Output: 55
```"
VectorsSummed,"```python
def vec_add(*in):
    return [x + y for x, y in zip(*in)]

res0, res1 = vec_add([1, 2, 3], [4, 5, 6])
```"
X-WordLines,"```python
def wrap(X, s):
    return '\n'.join([s[i:i+X] for i in range(0, len(s), X)])
```

**Example Usage:**

```python
text = ""This is a long sentence that needs to be wrapped.\nIt should be divided into lines with exactly 5 words each.""
result = wrap(5, text)
print(result)
```

**Output:**

```
This is a long sentence that needs to be
wrapped. It should be divided into lines
with exactly 5 words each.
```"
PigLatin,"```python
def piglatin(in0):
    return ' '.join([word+'ay' if word[0] in 'aeiou' else word[1:]+word[0]+'ay' for word in in0.split()])
```

**Example Usage:**
```python
str1 = ""hello world today""
str2 = piglatin(str1)

print(str1)  # Output: hello world today
print(str2)  # Output: ellohay orldway odayay
```"
NegativeToZero,"```python
def pos_vec(in0):
    return [0 if x < 0 else x for x in in0]

# Example Usage
in0 = [-1, 0, 3, -5, 2, -4]
res0 = pos_vec(in0)
print(res0)  # Output: [0, 0, 3, 0, 2, 0]
```"
ScrabbleScore,"```python
def scrabble(in0):
    return sum(ord(c) - 96 for c in in0 if c.isalpha())
```

**Example Usage:**
```python
scrabble(""hello"")  # Output: 10
scrabble(""world"")  # Output: 12
scrabble(""!@#$%^&"")  # Output: 0
```"
WordStats,"```python
def word_length_stats(in0):
    res0 = [0 for _ in range(len(in0) + 1)]
    res1, sent_cnt = 0, 0
    for w in in0.split():
        res0[len(w)] += 1
        sent_cnt += w.count('.') + w.count('!') + w.count('?')
    res1 = sent_cnt / sum(res0[-1:])
    return res0, res1
```

**Example Usage:**

```python
text = """"""This sentence has 3 words. This sentence has 4 words! This sentence has 5 words?""""""

word_counts, avg_length = word_length_stats(text)

print(""Word counts:"", word_counts)
print(""Average sentence length:"", avg_length)
```

**Output:**

```
Word counts: [3, 4, 5, 1]
Average sentence length: 3.5
```"
Checksum,"```python
def checksum(in0):
    res0 = sum(ord(c) for c in in0) % 64
    return chr(res0 + ord(' '))
```

**Example Usage:**
```python
>>> checksum('hello')
'h'
>>> checksum('world')
'w'
```"
Digits,"```python
def num_to_list(in0):
    return [int(str(in0)[i] * (-1)**(len(str(in0)) - i - 1) for i in range(len(str(in0))[::-1]]]
```

**Example Usage:**

```python
num_to_list(123)  # [3, 2, 1]
num_to_list(-123)  # [-3, -2, -1]
num_to_list(0)  # [0]
```"
Grade,"```python
def grade(in0, in1, in2, in3, in4, in5):
    if in5 >= in4: return 'A'
    elif in5 >= in3: return 'B'
    elif in5 >= in2: return 'C'
    elif in5 >= in1: return 'D'
    else: return 'F'
```

**Example Usage:**

```python
grade(90, 80, 70, 60, 85)  # Output: 'A'
grade(85, 80, 70, 60, 75)  # Output: 'B'
grade(80, 75, 70, 60, 65)  # Output: 'C'
grade(75, 70, 60, 50, 55)  # Output: 'D'
grade(70, 65, 60, 50, 45)  # Output: 'F'
```"
Median,"```python
def med(in0, in1, in2):
    return sorted([in0, in1, in2])[1]
```

**Example Usage:**
```python
res0 = med(1, 2, 3)
res1 = med(4, 5, 6)
```"
Smallest,"```python
def min4(in0, in1, in2, in3):
    return min(in0, in1, in2, in3)
```

**Example Usage:**

```python
res0 = min4(10, 20, 30, 40)
print(res0)  # Output: 10
```"
Syllables,"```python
def count_vowels(in0):
    res0 = sum(1 for ch in in0 if ch.lower() in 'aeiouy')
    return res0
```

**Example Usage:**

```python
string1 = ""This string has vowels!""
result = count_vowels(string1)
print(result)  # Output: 3
```"
